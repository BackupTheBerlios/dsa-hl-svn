AC_PREREQ(2.50)

AC_INIT(AIML, 0.2.0)
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
##AC_CONFIG_HEADER(engine/common/include/config.h)

##AC_CANONICAL_TARGET

dnl Check for programs
AC_LANG([C++])
AC_PROG_CC
AC_PROG_CXX
AM_PROG_CC_C_O
AC_PROG_INSTALL
AM_PROG_LIBTOOL


dnl GCC ersion check
if test x$GCC = xyes; then
    AC_MSG_CHECKING([version 3.x of gcc])
    if test -n "`$CC --version 2>&1|grep '3.'`"; then
        AC_DEFINE(EXT_HASH, 1, Use old STL hash options)
        AC_DEFINE(GCC_3_1, 1, 3.x GCC version)
        AC_MSG_RESULT(yes);
    else
        AC_MSG_RESULT(no)!
    fi
fi

# ***** DEBUGGING
AC_ARG_ENABLE(debug,[  --enable-debug          enable debugging [default=no]])
if test "$enable_debug" = "yes"; then
    CXXFLAGS="$CXXFLAGS -g -O0"
else
    CXXFLAGS="$CXXFLAGS -O2"
fi

# Pthreads
CXXFLAGS="$CXXFLAGS -pthread"


AC_ARG_ENABLE(tests,[  --enable-tests  enable unit testing [default=no]])
if test "$enable_tests" = "yes"; then
	AM_CONDITIONAL(with_tests, [true])
else
    AM_CONDITIONAL(with_tests, [false])
fi


dnl Other stuff we need
#AC_CHECK_LIB(m, pow)
#AC_CHECK_LIB(z, gzopen)
#AC_CHECK_FUNC(snprintf, AC_DEFINE(HAVE_SNPRINTF,,snprintf))
#AC_CHECK_FUNC(vsnprintf, AC_DEFINE(HAVE_VSNPRINTF,1,vsnprintf))
#AC_CHECK_PROG(HAVE_DOXYGEN_PROG, doxygen, `which doxygen`, false)

# XERCES
AC_CHECK_HEADERS(xercesc/util/XercesVersion.hpp, ,
    [AC_MSG_ERROR([cannot find libxerces headers]) ])
AC_CHECK_LIB(xerces-c,main,,
    [AC_MSG_ERROR([cannot find the libxerces library]) ])

dnl Create the makefiles
AC_CONFIG_FILES([Makefile \
		dependencies/Makefile dependencies/XmlMapper/Makefile \
		MadaBot/Makefile MadaBot/include/Makefile MadaBot/src/Makefile \
		TestApp/Makefile TestApp/include/Makefile TestApp/src/Makefile
    ])

AC_OUTPUT

