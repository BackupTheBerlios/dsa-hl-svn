// Base Texture with 4 blended Textures and included Detailmap
fragment_program glSplatting5_FP glsl
{
  source Splatting5.frag
}

vertex_program glSplatting5_VP glsl
{
  source Splatting5.vert
}

fragment_program dxSplatting5_FP hlsl
{
  source Splatting5.hlsl
  entry_point ps_main
  target ps_2_0
}

vertex_program dxSplatting5_VP hlsl
{
  source Splatting5.hlsl
  entry_point vs_main
  target vs_1_1
}

vertex_program dxSplatting5_SR_VP hlsl
{
  source SimpleShadowReceiver.hlsl
  entry_point vs_main
  target vs_1_1
}

material Splatting5
{
	technique hlsl
	{
		pass
		{
			// HLSL Fragment Shader
			fragment_program_ref dxSplatting5_FP
			{
				//Shader Constant: materialAmbient
				param_named materialAmbient float4 0.500000 0.500000 0.500000 1.000000
				//Shader Constant: materialDiffuse
				param_named materialDiffuse float4 0.500000 0.500000 0.500000 1.000000

				//Shader Constant: scaleBase
				param_named scaleBase  float 1.000000
				//Shader Constant: scaleBaseR
				param_named scaleBaseR float 1.000000
				//Shader Constant: scaleBaseG
				param_named scaleBaseG float 1.000000
				//Shader Constant: scaleBaseB
				param_named scaleBaseB float 1.000000
				//Shader Constant: scaleBaseA
				param_named scaleBaseA float 1.000000

				//Shader Constant: scaleDetail
				param_named scaleDetail  float 1.000000
				//Shader Constant: scaleDetailR
				param_named scaleDetailR float 1.000000
				//Shader Constant: scaleDetailG
				param_named scaleDetailG float 1.000000
				//Shader Constant: scaleDetailB
				param_named scaleDetailB float 1.000000
				//Shader Constant: scaleDetailA
				param_named scaleDetailA float 1.000000
			}
			// HLSL Vertex Shader
			vertex_program_ref dxSplatting5_VP
			{
				//Shader Constant: matWorldViewProjection
				param_named_auto matWorldViewProjection worldviewproj_matrix
			}
			// HLSL Vertex Shader
			shadow_receiver_vertex_program_ref dxSplatting5_SR_VP
			{
				//Shader Constant: matWorldViewProjection
				param_named_auto matWorldViewProjection worldviewproj_matrix
				//Shader Constant: matWorld
				param_named_auto matWorld world_matrix
				//Shader Constant: matTextureViewProjection
				param_named_auto matTextureViewProjection texture_viewproj_matrix
			}
			// The Texture containing the Splatting information in its channels
			texture_unit SplattingMap
			{
				filtering anisotropic
				
			}
			// Texture containing the LightingMap
			texture_unit LightingMap
			{
				filtering anisotropic
				
			}
			// Texture containing the groundlayer and its detailmap (inside the alpha channel)
			texture_unit BaseLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit RedLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit GreenLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit BlueLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit AlphaLayer
			{
				filtering anisotropic
				
			}
			
		}
	}

	technique glsl
	{
		pass
		{
			ambient 0.2 0.2 0.2
			diffuse 0.7 0.7 0.7

			vertex_program_ref glSplatting5_VP
			{
			}

			fragment_program_ref glSplatting5_FP
			{
				param_named splattingMap int 0
				param_named lightingMap int 1
				param_named base int 2
				param_named baseR int 3
				param_named baseG int 4
				param_named baseB int 5
				param_named baseA int 6

				//Shader Constant: scaleBase
				param_named scaleBase  float 1.000000
				//Shader Constant: scaleBaseR
				param_named scaleBaseR float 1.000000
				//Shader Constant: scaleBaseG
				param_named scaleBaseG float 1.000000
				//Shader Constant: scaleBaseB
				param_named scaleBaseB float 1.000000
				//Shader Constant: scaleBaseA
				param_named scaleBaseA float 1.000000

				//Shader Constant: scaleDetail
				param_named scaleDetail  float 1.000000
				//Shader Constant: scaleDetailR
				param_named scaleDetailR float 1.000000
				//Shader Constant: scaleDetailG
				param_named scaleDetailG float 1.000000
				//Shader Constant: scaleDetailB
				param_named scaleDetailB float 1.000000
				//Shader Constant: scaleDetailA
				param_named scaleDetailA float 1.000000
			}

			// The Texture containing the Splatting information in its channels
			texture_unit SplattingMap
			{
				filtering anisotropic
				
			}
			// Texture containing the LightingMap
			texture_unit LightingMap
			{
				filtering anisotropic
				
			}
			// Texture containing the groundlayer and its detailmap (inside the alpha channel)
			texture_unit BaseLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit RedLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit GreenLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit BlueLayer
			{
				filtering anisotropic
				
			}
			// Texture containing the first blended (according to red amount in SplattingMap) layer and its detailmap (inside the alpha channel)
			texture_unit AlphaLayer
			{
				filtering anisotropic
				
			}
		}
	}

	technique fixed_function
	{
	}
}
