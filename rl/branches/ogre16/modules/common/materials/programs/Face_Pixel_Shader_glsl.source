//
// Structure definitions
//

struct PS_INPUT {
    vec2 Texcoord;
    vec2 Texcoord1;
    vec2 Texcoord2;
    vec4 Color;
};


//
// Global variable definitions
//

uniform sampler2D Texture1;
uniform sampler2D Texture2;
uniform sampler2D baseMap;

//
// Function declarations
//

vec4 ps_main( in PS_INPUT Input );

//
// Function definitions
//

vec4 ps_main( in PS_INPUT Input ) {
    vec4 eyeColor;
    vec4 faceColor;
	
	
    eyeColor = (texture2D( Texture1, Input.Texcoord1) * texture2D( Texture2, Input.Texcoord2));
    faceColor = texture2D( baseMap, Input.Texcoord);
    return vec4( (mix( eyeColor.xyz , faceColor.xyz , vec3( faceColor.w )) * Input.Color.xyz ), 1.00000);
}


//
// Translator's entry point
//
void main() {
    vec4 xlat_retVal;
    PS_INPUT xlat_temp_Input;
    xlat_temp_Input.Texcoord = vec2( gl_TexCoord[0]);
    xlat_temp_Input.Texcoord1 = vec2( gl_TexCoord[1]);
    xlat_temp_Input.Texcoord2 = vec2( gl_TexCoord[2]);
    xlat_temp_Input.Color = vec4( gl_TexCoord[3]);

    xlat_retVal = ps_main( xlat_temp_Input);

    gl_FragData[0] = vec4( xlat_retVal);
}


