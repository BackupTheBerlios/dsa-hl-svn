VS.NET

Um Rastullahs Lockenpracht bauen zu können werden folgende zusätzliche
Bibliotheken benötigt:

ogre/ - Ogre 3D - CVS HEAD - Dagon
http://www.ogre3d.org
Die Source Version, nicht das SDK

ruby/ - Ruby - 1.8
http://ruby-lang.org

swig/ - SWIG - 1.3.25  (exakt diese Version + Patches von Berlios )
http://www.swig.org
SWIG 1.3.25 - Patch von http://developer.berlios.de/project/showfiles.php?group_id=802
Man muss die Dateien [swig directory]/Lib/ruby/rubyswigtype.swg, 
[swig directory]/Source/Modules/Ruby.cxx und [swig directory]/swig.exe ersetzen

fmod/ -  FMOD 3.74 Programmers API
http://www.fmod.org/

OgreNewt/ OgreNewt - unsere modifizierte Version
http://team-pantheon.de/~haffax/dependencies/OgreNewt.zip

NewtonSDK/ - 1.32
http://www.physicsengine.com/

cegui/ - Cegui 0.4
http://www.cegui.org.uk/

xerces/ - Xerces-c
http://xml.apache.org/xerces-c/download.cgi

boost/ - Boost Threads und Boost Bind - mindestens 1.3.1
http://www.boost.org

rllooks/ - Der RastullahLook für CeGui
svn://svn.berlios.de/dsa-hl/rllooks/trunk


Diese Verzeichnisse sind alle unterhalb von rl/trunk/dependencies anzulegen.
Die Projekte müssen alle in diesen Verzeichnissen angelegt werden.
Die Verzeichnisstruktur sollte jeweils erhalten bleiben.
Die Versionsnummern sind wichtig.
Man muss die Bibliotheken CeGUI und Ogre und dann OgreNewt noch erstellen.

VS.Net-2003-Nutzer können sich alternativ von der Projektseite auch die Dependencies runterladen und ins rl-Verzeichnis entpacken. Diese sind jedoch nicht immer aktuell. ( zum Beispiel muß zur Zeit der Verfassung dieses Textes swig erneuert werden. )

Das Projekt kann man dann einfach kompilieren.

Sollte das nicht zutreffen
 - Überprüft ob alle Dependencies in den korrekten Versionen vorhanden sind
 - Fragt uns auf unserer Webseite oder im irc

Vor dem Debuggen müssen die nötigen Dateien in ein Distributionsverzeichnis
kopiert werden. Je nach kompilierter Konfiguration
müssen andere DLLs kopiert werden. Dafür gibt es die beiden bat-Dateien release_copy.bat
und debug_copy.bat jeweils für Release- und Debug-Konfiguration.
Es legt den Ordner rl_dist an. Danach muss man noch das modules-Verzeichnis dahin kopieren
Rastullah.exe startet dann das Programm.

Will man mit VS.NET debuggen muss man noch im Projektmenü des startup-Projektes
Im Punkt Debuggen das Startprogramm und das Arbeitsverzeichnis auf
Rastullah.exe im Verzeichnis rl_dist verweisen,
bzw. auf das Verzeichnis rl_dist.

